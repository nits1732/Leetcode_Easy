You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.




class Solution {
public:
    bool isPalindrome(string s){
        int length=s.size()-1;
        bool ans=false;
        for(int x=0;x<length/2;x++){
            if(s[x]==s[length-x]){
                ans=true;
            }else{
                ans=false;
                break;
            }
        }
        return ans;
    }
    int removePalindromeSub(string s) {
        if(s.size()==0){
            return 0;
        }else if(isPalindrome(s)){
            return 1;
        }else{
            return 2;
        }
    }
};
